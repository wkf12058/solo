<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.solo.body.user.dao.PersonEducationMapper">
  <resultMap id="BaseResultMap" type="com.solo.body.user.model.PersonEducation">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="person_id" jdbcType="VARCHAR" property="personId" />
    <result column="school_name" jdbcType="VARCHAR" property="schoolName" />
    <result column="education" jdbcType="VARCHAR" property="education" />
    <result column="major" jdbcType="VARCHAR" property="major" />
    <result column="certificate" jdbcType="VARCHAR" property="certificate" />
    <result column="time_slot" jdbcType="VARCHAR" property="timeSlot" />
  </resultMap>
  <sql id="Base_Column_List">
    id, person_id, school_name, education, major, certificate, time_slot
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from person_education
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from person_education
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.solo.body.user.model.PersonEducation">
    insert into person_education (id, person_id, school_name, 
      education, major, certificate, 
      time_slot)
    values (#{id,jdbcType=INTEGER}, #{personId,jdbcType=VARCHAR}, #{schoolName,jdbcType=VARCHAR}, 
      #{education,jdbcType=VARCHAR}, #{major,jdbcType=VARCHAR}, #{certificate,jdbcType=VARCHAR}, 
      #{timeSlot,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.solo.body.user.model.PersonEducation">
    insert into person_education
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="personId != null">
        person_id,
      </if>
      <if test="schoolName != null">
        school_name,
      </if>
      <if test="education != null">
        education,
      </if>
      <if test="major != null">
        major,
      </if>
      <if test="certificate != null">
        certificate,
      </if>
      <if test="timeSlot != null">
        time_slot,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="personId != null">
        #{personId,jdbcType=VARCHAR},
      </if>
      <if test="schoolName != null">
        #{schoolName,jdbcType=VARCHAR},
      </if>
      <if test="education != null">
        #{education,jdbcType=VARCHAR},
      </if>
      <if test="major != null">
        #{major,jdbcType=VARCHAR},
      </if>
      <if test="certificate != null">
        #{certificate,jdbcType=VARCHAR},
      </if>
      <if test="timeSlot != null">
        #{timeSlot,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.solo.body.user.model.PersonEducation">
    update person_education
    <set>
      <if test="personId != null">
        person_id = #{personId,jdbcType=VARCHAR},
      </if>
      <if test="schoolName != null">
        school_name = #{schoolName,jdbcType=VARCHAR},
      </if>
      <if test="education != null">
        education = #{education,jdbcType=VARCHAR},
      </if>
      <if test="major != null">
        major = #{major,jdbcType=VARCHAR},
      </if>
      <if test="certificate != null">
        certificate = #{certificate,jdbcType=VARCHAR},
      </if>
      <if test="timeSlot != null">
        time_slot = #{timeSlot,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.solo.body.user.model.PersonEducation">
    update person_education
    set person_id = #{personId,jdbcType=VARCHAR},
      school_name = #{schoolName,jdbcType=VARCHAR},
      education = #{education,jdbcType=VARCHAR},
      major = #{major,jdbcType=VARCHAR},
      certificate = #{certificate,jdbcType=VARCHAR},
      time_slot = #{timeSlot,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
        <!-- 添加的方法 -->
  <select id="selectBySql"   resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from person_education
    where  ${value} 
  </select>
  <select id="selectCount"  resultType="java.lang.Integer">
    select count(1)
    from person_education
    where  ${value} 
  </select> 
  
</mapper>