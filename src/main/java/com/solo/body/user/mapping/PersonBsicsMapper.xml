<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.solo.body.user.dao.PersonBsicsMapper">
  <resultMap id="BaseResultMap" type="com.solo.body.user.model.PersonBsics">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="major" jdbcType="VARCHAR" property="major" />
    <result column="school" jdbcType="VARCHAR" property="school" />
    <result column="internship_time" jdbcType="VARCHAR" property="internshipTime" />
    <result column="input_time" jdbcType="VARCHAR" property="inputTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, sex, phone, major, school, internship_time, input_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from person_basics
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from person_basics
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.solo.body.user.model.PersonBsics">
    insert into person_basics (id, name, sex, 
      phone, major, school, 
      internship_time, input_time)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{major,jdbcType=VARCHAR}, #{school,jdbcType=VARCHAR}, 
      #{internshipTime,jdbcType=VARCHAR}, #{inputTime,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.solo.body.user.model.PersonBsics">
    insert into person_basics
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="major != null">
        major,
      </if>
      <if test="school != null">
        school,
      </if>
      <if test="internshipTime != null">
        internship_time,
      </if>
      <if test="inputTime != null">
        input_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="major != null">
        #{major,jdbcType=VARCHAR},
      </if>
      <if test="school != null">
        #{school,jdbcType=VARCHAR},
      </if>
      <if test="internshipTime != null">
        #{internshipTime,jdbcType=VARCHAR},
      </if>
      <if test="inputTime != null">
        #{inputTime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.solo.body.user.model.PersonBsics">
    update person_basics
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="major != null">
        major = #{major,jdbcType=VARCHAR},
      </if>
      <if test="school != null">
        school = #{school,jdbcType=VARCHAR},
      </if>
      <if test="internshipTime != null">
        internship_time = #{internshipTime,jdbcType=VARCHAR},
      </if>
      <if test="inputTime != null">
        input_time = #{inputTime,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.solo.body.user.model.PersonBsics">
    update person_basics
    set name = #{name,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      major = #{major,jdbcType=VARCHAR},
      school = #{school,jdbcType=VARCHAR},
      internship_time = #{internshipTime,jdbcType=VARCHAR},
      input_time = #{inputTime,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <!-- 添加的方法 -->
  <select id="selectBySql"   resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from person_basics
    where  ${value} 
  </select>
  <select id="selectCount"  resultType="java.lang.Integer">
    select count(1)
    from person_basics
    where  ${value} 
  </select> 
  
</mapper>