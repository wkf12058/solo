<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.solo.body.user.dao.FamilyMemberMapper">
  <resultMap id="BaseResultMap" type="com.solo.body.user.model.FamilyMember">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="person_id" jdbcType="VARCHAR" property="personId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="birthday" jdbcType="VARCHAR" property="birthday" />
    <result column="work_company" jdbcType="VARCHAR" property="workCompany" />
    <result column="job" jdbcType="VARCHAR" property="job" />
    <result column="relationship" jdbcType="VARCHAR" property="relationship" />
  </resultMap>
  <sql id="Base_Column_List">
    id, person_id, name, birthday, work_company, job, relationship
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from family_member
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from family_member
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.solo.body.user.model.FamilyMember">
    insert into family_member (id, person_id, name, 
      birthday, work_company, job, 
      relationship)
    values (#{id,jdbcType=INTEGER}, #{personId,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{birthday,jdbcType=VARCHAR}, #{workCompany,jdbcType=VARCHAR}, #{job,jdbcType=VARCHAR}, 
      #{relationship,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.solo.body.user.model.FamilyMember">
    insert into family_member
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="personId != null">
        person_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="workCompany != null">
        work_company,
      </if>
      <if test="job != null">
        job,
      </if>
      <if test="relationship != null">
        relationship,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="personId != null">
        #{personId,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=VARCHAR},
      </if>
      <if test="workCompany != null">
        #{workCompany,jdbcType=VARCHAR},
      </if>
      <if test="job != null">
        #{job,jdbcType=VARCHAR},
      </if>
      <if test="relationship != null">
        #{relationship,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.solo.body.user.model.FamilyMember">
    update family_member
    <set>
      <if test="personId != null">
        person_id = #{personId,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=VARCHAR},
      </if>
      <if test="workCompany != null">
        work_company = #{workCompany,jdbcType=VARCHAR},
      </if>
      <if test="job != null">
        job = #{job,jdbcType=VARCHAR},
      </if>
      <if test="relationship != null">
        relationship = #{relationship,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.solo.body.user.model.FamilyMember">
    update family_member
    set person_id = #{personId,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=VARCHAR},
      work_company = #{workCompany,jdbcType=VARCHAR},
      job = #{job,jdbcType=VARCHAR},
      relationship = #{relationship,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
<!-- 添加的方法 -->
  <select id="selectBySql"   resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from family_member
    where  ${value} 
  </select>
  <select id="selectCount"  resultType="java.lang.Integer">
    select count(1)
    from family_member
    where  ${value} 
  </select>  
</mapper>